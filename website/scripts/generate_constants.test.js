// Mock dependencies
const fs = require('fs');
jest.mock('fs');

jest.mock('path', () => ({
  resolve: jest.fn().mockImplementation((_, filePath) => filePath),
}));

// Jest config override for this test file only
jest.mock(
  '../modules/shared-constants/index.js',
  () => require('../modules/@apostrophecms/shared-constants/index.js'),
  { virtual: true },
);

// Mock for server constants module - this is for the success test
const mockServerModule = {
  init: jest.fn().mockImplementation((self) => {
    self.STANDARD_FORM_FIELD_NAMES = {
      firstName: 'firstName',
      lastName: 'lastName',
      email: 'email',
    };
  }),
};

// Register the success mock for the actual file
jest.mock(
  '../modules/@apostrophecms/shared-constants/index.js',
  () => mockServerModule,
);

describe('generate-constants.js', () => {
  // Reset mocks before each test
  beforeEach(() => {
    jest.clearAllMocks();
    // Clear the script from require cache
    delete require.cache[require.resolve('./generate_constants.js')];
  });

  test('successfully generates client-side constants', () => {
    // Run the script
    require('./generate_constants.js');

    // Check that the server module's init function was called
    expect(mockServerModule.init).toHaveBeenCalled();

    // Check that fs.writeFileSync was called with the right arguments
    expect(fs.writeFileSync).toHaveBeenCalledTimes(1);
    expect(fs.writeFileSync).toHaveBeenCalledWith(
      '../modules/shared-constants/ui/src/index.js',
      expect.stringContaining('STANDARD_FORM_FIELD_NAMES'),
    );

    // Check content of generated file
    const fileContent = fs.writeFileSync.mock.calls[0][1];
    expect(fileContent).toContain('firstName');
    expect(fileContent).toContain('lastName');
    expect(fileContent).toContain('email');
    expect(fileContent).toContain('DO NOT EDIT THIS FILE DIRECTLY');
  });

  test('handles errors properly', () => {
    // Force the server module's init to throw an error
    mockServerModule.init.mockImplementationOnce(() => {
      throw new Error('Test error');
    });

    // Clear require cache to ensure script runs again
    jest.resetModules();
    delete require.cache[require.resolve('./generate_constants.js')];

    // Run the script which should now encounter the error
    expect(() => {
      require('./generate_constants.js');
    }).toThrow('Failed to generate client-side constants: Test error');
  });
});
